#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionTrabajos1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Administracion")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertConsorcio(Consorcio instance);
    partial void UpdateConsorcio(Consorcio instance);
    partial void DeleteConsorcio(Consorcio instance);
    partial void InsertPropiedad(Propiedad instance);
    partial void UpdatePropiedad(Propiedad instance);
    partial void DeletePropiedad(Propiedad instance);
    partial void InsertPropietario(Propietario instance);
    partial void UpdatePropietario(Propietario instance);
    partial void DeletePropietario(Propietario instance);
    partial void InsertProveedor(Proveedor instance);
    partial void UpdateProveedor(Proveedor instance);
    partial void DeleteProveedor(Proveedor instance);
    partial void InsertTrabajo(Trabajo instance);
    partial void UpdateTrabajo(Trabajo instance);
    partial void DeleteTrabajo(Trabajo instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::GestionTrabajos1.Properties.Settings.Default.AdministracionConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Consorcio> Consorcio
		{
			get
			{
				return this.GetTable<Consorcio>();
			}
		}
		
		public System.Data.Linq.Table<Propiedad> Propiedad
		{
			get
			{
				return this.GetTable<Propiedad>();
			}
		}
		
		public System.Data.Linq.Table<Propietario> Propietario
		{
			get
			{
				return this.GetTable<Propietario>();
			}
		}
		
		public System.Data.Linq.Table<Proveedor> Proveedor
		{
			get
			{
				return this.GetTable<Proveedor>();
			}
		}
		
		public System.Data.Linq.Table<Trabajo> Trabajo
		{
			get
			{
				return this.GetTable<Trabajo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consorcio")]
	public partial class Consorcio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CUIT;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _ClaveSuterh;
		
		private EntitySet<Propiedad> _Propiedad;
		
		private EntitySet<Trabajo> _Trabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCUITChanging(string value);
    partial void OnCUITChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnClaveSuterhChanging(string value);
    partial void OnClaveSuterhChanged();
    #endregion
		
		public Consorcio()
		{
			this._Propiedad = new EntitySet<Propiedad>(new Action<Propiedad>(this.attach_Propiedad), new Action<Propiedad>(this.detach_Propiedad));
			this._Trabajo = new EntitySet<Trabajo>(new Action<Trabajo>(this.attach_Trabajo), new Action<Trabajo>(this.detach_Trabajo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUIT", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string CUIT
		{
			get
			{
				return this._CUIT;
			}
			set
			{
				if ((this._CUIT != value))
				{
					this.OnCUITChanging(value);
					this.SendPropertyChanging();
					this._CUIT = value;
					this.SendPropertyChanged("CUIT");
					this.OnCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaveSuterh", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ClaveSuterh
		{
			get
			{
				return this._ClaveSuterh;
			}
			set
			{
				if ((this._ClaveSuterh != value))
				{
					this.OnClaveSuterhChanging(value);
					this.SendPropertyChanging();
					this._ClaveSuterh = value;
					this.SendPropertyChanged("ClaveSuterh");
					this.OnClaveSuterhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consorcio_Propiedad", Storage="_Propiedad", ThisKey="Id", OtherKey="ConsorcioID")]
		public EntitySet<Propiedad> Propiedad
		{
			get
			{
				return this._Propiedad;
			}
			set
			{
				this._Propiedad.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consorcio_Trabajo", Storage="_Trabajo", ThisKey="Id", OtherKey="ConsorcioID")]
		public EntitySet<Trabajo> Trabajo
		{
			get
			{
				return this._Trabajo;
			}
			set
			{
				this._Trabajo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Propiedad(Propiedad entity)
		{
			this.SendPropertyChanging();
			entity.Consorcio = this;
		}
		
		private void detach_Propiedad(Propiedad entity)
		{
			this.SendPropertyChanging();
			entity.Consorcio = null;
		}
		
		private void attach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Consorcio = this;
		}
		
		private void detach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Consorcio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Propiedad")]
	public partial class Propiedad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UF;
		
		private string _Piso;
		
		private string _Departamento;
		
		private string _ColumnaA;
		
		private string _ColumnaB;
		
		private string _ColumnaC;
		
		private string _ColumnaD;
		
		private System.Nullable<int> _ConsorcioID;
		
		private System.Nullable<int> _PropietarioID;
		
		private EntitySet<Trabajo> _Trabajo;
		
		private EntityRef<Consorcio> _Consorcio;
		
		private EntityRef<Propietario> _Propietario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUFChanging(string value);
    partial void OnUFChanged();
    partial void OnPisoChanging(string value);
    partial void OnPisoChanged();
    partial void OnDepartamentoChanging(string value);
    partial void OnDepartamentoChanged();
    partial void OnColumnaAChanging(string value);
    partial void OnColumnaAChanged();
    partial void OnColumnaBChanging(string value);
    partial void OnColumnaBChanged();
    partial void OnColumnaCChanging(string value);
    partial void OnColumnaCChanged();
    partial void OnColumnaDChanging(string value);
    partial void OnColumnaDChanged();
    partial void OnConsorcioIDChanging(System.Nullable<int> value);
    partial void OnConsorcioIDChanged();
    partial void OnPropietarioIDChanging(System.Nullable<int> value);
    partial void OnPropietarioIDChanged();
    #endregion
		
		public Propiedad()
		{
			this._Trabajo = new EntitySet<Trabajo>(new Action<Trabajo>(this.attach_Trabajo), new Action<Trabajo>(this.detach_Trabajo));
			this._Consorcio = default(EntityRef<Consorcio>);
			this._Propietario = default(EntityRef<Propietario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UF", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string UF
		{
			get
			{
				return this._UF;
			}
			set
			{
				if ((this._UF != value))
				{
					this.OnUFChanging(value);
					this.SendPropertyChanging();
					this._UF = value;
					this.SendPropertyChanged("UF");
					this.OnUFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piso", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Piso
		{
			get
			{
				return this._Piso;
			}
			set
			{
				if ((this._Piso != value))
				{
					this.OnPisoChanging(value);
					this.SendPropertyChanging();
					this._Piso = value;
					this.SendPropertyChanged("Piso");
					this.OnPisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departamento", DbType="NChar(10)")]
		public string Departamento
		{
			get
			{
				return this._Departamento;
			}
			set
			{
				if ((this._Departamento != value))
				{
					this.OnDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._Departamento = value;
					this.SendPropertyChanged("Departamento");
					this.OnDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnaA", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string ColumnaA
		{
			get
			{
				return this._ColumnaA;
			}
			set
			{
				if ((this._ColumnaA != value))
				{
					this.OnColumnaAChanging(value);
					this.SendPropertyChanging();
					this._ColumnaA = value;
					this.SendPropertyChanged("ColumnaA");
					this.OnColumnaAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnaB", DbType="NChar(10)")]
		public string ColumnaB
		{
			get
			{
				return this._ColumnaB;
			}
			set
			{
				if ((this._ColumnaB != value))
				{
					this.OnColumnaBChanging(value);
					this.SendPropertyChanging();
					this._ColumnaB = value;
					this.SendPropertyChanged("ColumnaB");
					this.OnColumnaBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnaC", DbType="NChar(10)")]
		public string ColumnaC
		{
			get
			{
				return this._ColumnaC;
			}
			set
			{
				if ((this._ColumnaC != value))
				{
					this.OnColumnaCChanging(value);
					this.SendPropertyChanging();
					this._ColumnaC = value;
					this.SendPropertyChanged("ColumnaC");
					this.OnColumnaCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnaD", DbType="NChar(10)")]
		public string ColumnaD
		{
			get
			{
				return this._ColumnaD;
			}
			set
			{
				if ((this._ColumnaD != value))
				{
					this.OnColumnaDChanging(value);
					this.SendPropertyChanging();
					this._ColumnaD = value;
					this.SendPropertyChanged("ColumnaD");
					this.OnColumnaDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsorcioID", DbType="Int")]
		public System.Nullable<int> ConsorcioID
		{
			get
			{
				return this._ConsorcioID;
			}
			set
			{
				if ((this._ConsorcioID != value))
				{
					if (this._Consorcio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsorcioIDChanging(value);
					this.SendPropertyChanging();
					this._ConsorcioID = value;
					this.SendPropertyChanged("ConsorcioID");
					this.OnConsorcioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropietarioID", DbType="Int")]
		public System.Nullable<int> PropietarioID
		{
			get
			{
				return this._PropietarioID;
			}
			set
			{
				if ((this._PropietarioID != value))
				{
					if (this._Propietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropietarioIDChanging(value);
					this.SendPropertyChanging();
					this._PropietarioID = value;
					this.SendPropertyChanged("PropietarioID");
					this.OnPropietarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Propiedad_Trabajo", Storage="_Trabajo", ThisKey="Id", OtherKey="PropiedadID")]
		public EntitySet<Trabajo> Trabajo
		{
			get
			{
				return this._Trabajo;
			}
			set
			{
				this._Trabajo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consorcio_Propiedad", Storage="_Consorcio", ThisKey="ConsorcioID", OtherKey="Id", IsForeignKey=true)]
		public Consorcio Consorcio
		{
			get
			{
				return this._Consorcio.Entity;
			}
			set
			{
				Consorcio previousValue = this._Consorcio.Entity;
				if (((previousValue != value) 
							|| (this._Consorcio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consorcio.Entity = null;
						previousValue.Propiedad.Remove(this);
					}
					this._Consorcio.Entity = value;
					if ((value != null))
					{
						value.Propiedad.Add(this);
						this._ConsorcioID = value.Id;
					}
					else
					{
						this._ConsorcioID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Consorcio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Propietario_Propiedad", Storage="_Propietario", ThisKey="PropietarioID", OtherKey="Id", IsForeignKey=true)]
		public Propietario Propietario
		{
			get
			{
				return this._Propietario.Entity;
			}
			set
			{
				Propietario previousValue = this._Propietario.Entity;
				if (((previousValue != value) 
							|| (this._Propietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Propietario.Entity = null;
						previousValue.Propiedad.Remove(this);
					}
					this._Propietario.Entity = value;
					if ((value != null))
					{
						value.Propiedad.Add(this);
						this._PropietarioID = value.Id;
					}
					else
					{
						this._PropietarioID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Propietario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Propiedad = this;
		}
		
		private void detach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Propiedad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Propietario")]
	public partial class Propietario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _DNI;
		
		private string _CUIT;
		
		private string _Mail;
		
		private EntitySet<Propiedad> _Propiedad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnDNIChanging(string value);
    partial void OnDNIChanged();
    partial void OnCUITChanging(string value);
    partial void OnCUITChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    #endregion
		
		public Propietario()
		{
			this._Propiedad = new EntitySet<Propiedad>(new Action<Propiedad>(this.attach_Propiedad), new Action<Propiedad>(this.detach_Propiedad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNI", DbType="NChar(10)")]
		public string DNI
		{
			get
			{
				return this._DNI;
			}
			set
			{
				if ((this._DNI != value))
				{
					this.OnDNIChanging(value);
					this.SendPropertyChanging();
					this._DNI = value;
					this.SendPropertyChanged("DNI");
					this.OnDNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUIT", DbType="NChar(11)")]
		public string CUIT
		{
			get
			{
				return this._CUIT;
			}
			set
			{
				if ((this._CUIT != value))
				{
					this.OnCUITChanging(value);
					this.SendPropertyChanging();
					this._CUIT = value;
					this.SendPropertyChanged("CUIT");
					this.OnCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(50)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Propietario_Propiedad", Storage="_Propiedad", ThisKey="Id", OtherKey="PropietarioID")]
		public EntitySet<Propiedad> Propiedad
		{
			get
			{
				return this._Propiedad;
			}
			set
			{
				this._Propiedad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Propiedad(Propiedad entity)
		{
			this.SendPropertyChanging();
			entity.Propietario = this;
		}
		
		private void detach_Propiedad(Propiedad entity)
		{
			this.SendPropertyChanging();
			entity.Propietario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedor")]
	public partial class Proveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CUIT;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private string _Email;
		
		private string _Categoria;
		
		private EntitySet<Trabajo> _Trabajo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCUITChanging(string value);
    partial void OnCUITChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    #endregion
		
		public Proveedor()
		{
			this._Trabajo = new EntitySet<Trabajo>(new Action<Trabajo>(this.attach_Trabajo), new Action<Trabajo>(this.detach_Trabajo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUIT", DbType="NChar(11) NOT NULL", CanBeNull=false)]
		public string CUIT
		{
			get
			{
				return this._CUIT;
			}
			set
			{
				if ((this._CUIT != value))
				{
					this.OnCUITChanging(value);
					this.SendPropertyChanging();
					this._CUIT = value;
					this.SendPropertyChanged("CUIT");
					this.OnCUITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NChar(30)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NChar(20)")]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Trabajo", Storage="_Trabajo", ThisKey="Id", OtherKey="ProveedorID")]
		public EntitySet<Trabajo> Trabajo
		{
			get
			{
				return this._Trabajo;
			}
			set
			{
				this._Trabajo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = this;
		}
		
		private void detach_Trabajo(Trabajo entity)
		{
			this.SendPropertyChanging();
			entity.Proveedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trabajo")]
	public partial class Trabajo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Detalle;
		
		private string _Estado;
		
		private System.Nullable<int> _ProveedorID;
		
		private int _ConsorcioID;
		
		private System.Nullable<int> _PropiedadID;
		
		private EntityRef<Consorcio> _Consorcio;
		
		private EntityRef<Propiedad> _Propiedad;
		
		private EntityRef<Proveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnProveedorIDChanging(System.Nullable<int> value);
    partial void OnProveedorIDChanged();
    partial void OnConsorcioIDChanging(int value);
    partial void OnConsorcioIDChanged();
    partial void OnPropiedadIDChanging(System.Nullable<int> value);
    partial void OnPropiedadIDChanged();
    #endregion
		
		public Trabajo()
		{
			this._Consorcio = default(EntityRef<Consorcio>);
			this._Propiedad = default(EntityRef<Propiedad>);
			this._Proveedor = default(EntityRef<Proveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NChar(20)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProveedorID", DbType="Int")]
		public System.Nullable<int> ProveedorID
		{
			get
			{
				return this._ProveedorID;
			}
			set
			{
				if ((this._ProveedorID != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProveedorIDChanging(value);
					this.SendPropertyChanging();
					this._ProveedorID = value;
					this.SendPropertyChanged("ProveedorID");
					this.OnProveedorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsorcioID", DbType="Int NOT NULL")]
		public int ConsorcioID
		{
			get
			{
				return this._ConsorcioID;
			}
			set
			{
				if ((this._ConsorcioID != value))
				{
					if (this._Consorcio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConsorcioIDChanging(value);
					this.SendPropertyChanging();
					this._ConsorcioID = value;
					this.SendPropertyChanged("ConsorcioID");
					this.OnConsorcioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropiedadID", DbType="Int")]
		public System.Nullable<int> PropiedadID
		{
			get
			{
				return this._PropiedadID;
			}
			set
			{
				if ((this._PropiedadID != value))
				{
					if (this._Propiedad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropiedadIDChanging(value);
					this.SendPropertyChanging();
					this._PropiedadID = value;
					this.SendPropertyChanged("PropiedadID");
					this.OnPropiedadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consorcio_Trabajo", Storage="_Consorcio", ThisKey="ConsorcioID", OtherKey="Id", IsForeignKey=true)]
		public Consorcio Consorcio
		{
			get
			{
				return this._Consorcio.Entity;
			}
			set
			{
				Consorcio previousValue = this._Consorcio.Entity;
				if (((previousValue != value) 
							|| (this._Consorcio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consorcio.Entity = null;
						previousValue.Trabajo.Remove(this);
					}
					this._Consorcio.Entity = value;
					if ((value != null))
					{
						value.Trabajo.Add(this);
						this._ConsorcioID = value.Id;
					}
					else
					{
						this._ConsorcioID = default(int);
					}
					this.SendPropertyChanged("Consorcio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Propiedad_Trabajo", Storage="_Propiedad", ThisKey="PropiedadID", OtherKey="Id", IsForeignKey=true)]
		public Propiedad Propiedad
		{
			get
			{
				return this._Propiedad.Entity;
			}
			set
			{
				Propiedad previousValue = this._Propiedad.Entity;
				if (((previousValue != value) 
							|| (this._Propiedad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Propiedad.Entity = null;
						previousValue.Trabajo.Remove(this);
					}
					this._Propiedad.Entity = value;
					if ((value != null))
					{
						value.Trabajo.Add(this);
						this._PropiedadID = value.Id;
					}
					else
					{
						this._PropiedadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Propiedad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Trabajo", Storage="_Proveedor", ThisKey="ProveedorID", OtherKey="Id", IsForeignKey=true)]
		public Proveedor Proveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				Proveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.Trabajo.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.Trabajo.Add(this);
						this._ProveedorID = value.Id;
					}
					else
					{
						this._ProveedorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
